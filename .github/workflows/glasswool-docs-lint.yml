name: Docs/Linting/Benchmarks

on:
  push:
    branches:
      - main
      - "*.x.x"
  pull_request:
    branches:
      - main
      - "*.x.x"
  merge_group:

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

permissions:
  # increase the rate limit for nix operations hitting github, but limit the
  # permissions to reading things
  contents: read

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
# install mamba / poetry lock here ?

      - name: pre-commit checks
        run: pre-commit run --all-files --show-diff-on-failure --color=always


  docs_pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}
    steps:
      # Think you need to install mamba / poetry lock here
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: build docs
        run: mkdocs build --strict

      - name: verify internal links
        run: just checklinks --offline --no-progress

  docs_push:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    if: github.event_name == 'push'
    concurrency: docs-${{ github.repository }}
#    needs:
#      # wait on benchmarks to prevent a race condition when pushing to the
#      # gh-pages branch
#      - benchmarks
    steps:

      - name: Generate a GitHub token
        uses: tibdex/github-app-token@v1
        id: generate_token
        with:
          app_id: ${{ secrets.DOCS_APP_ID }}
          private_key: ${{ secrets.DOCS_APP_PRIVATE_KEY }}

      - name: checkout
        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#          token: ${{ steps.generate_token.outputs.token }}

      - name: Configure git info
        run: |
          set -euo pipefail
          git config user.name 'glasswool-docs-bot[bot]'
          git config user.email 'glasswool-docs-bot[bot]@users.noreply.github.com'

      - name: Install Conda environment from environment.yml
        uses: mamba-org/provision-with-micromamba@main
        with:
          cache-downloads: true
          cache-env: true
          environment-file: conda-linux-64.lock
          environment-name: glasswool
          channels:
            conda-forge
            nodefaults

      - name: activate mamba environment
        run: |
          mamba env export
          python -V -V

      - uses: syphar/restore-pip-download-cache@v1
        with:
          requirement_files: poetry.lock
          custom_cache_key_element: no-backends-${{ steps.install_python.outputs.python-version }}

      - uses: syphar/restore-virtualenv@v1
        with:
          requirement_files: poetry.lock
          custom_cache_key_element: core

      - name: install glasswool
        run: poetry install --without dev --without test

      - name: build and push dev docs
        run: |
          mkdocs gh-deploy --message 'docs: glasswool@${{ github.sha }}'

  simulate_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
# Set up npm / semantic-release here ?

      - name: Configure git info
        run: |
          set -euo pipefail

          # not incredibly important what user we use here
          #
          # we're making a commit in a temporary worktree that is thrown away
          # if the process exits successfully
          #
          # git requires user information to make commits
          git config user.name 'glasswool-squawk-bot[bot]'
          git config user.email 'glasswool-squawk-bot[bot]@users.noreply.github.com'

      - name: run semantic-release
        run: ./ci/release/dry_run.sh